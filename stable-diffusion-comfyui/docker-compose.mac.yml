networks:
  traefik:
    external: true

services:
  comfyui:
    image: "pmikus/stable-diffusion-comfy-ui:latest"
    build:
      context: .
      dockerfile: "Dockerfile"
      args:
        RELEASE: "local"
        BASE_IMAGE: "pmikus/ai-base:local-cuda12.4.1"
    # Create a .env file in the same directory as this docker-compose.yml file
    # and populate it with environment variables. See .env.sample
    env_file:
      - ".env"
      # variables without a default will automatically inherit from the host environment
    environment:
      - "COMFYUI_FLAGS=${COMFYUI_FLAGS:-}"
      - "COMFYUI_PORT_HOST=${COMFYUI_PORT_HOST:-3000}"
      - "COMFYUI_METRICS_PORT=${COMFYUI_METRICS_PORT:-33000}"
      - "COMFYUI_URL=${COMFYUI_URL:-}"
    extends:
      file: ../extends/hwaccel.ml.yml
      service: cpu # set to one of [armnn, cpu, cuda, openvino, openvino-wsl]
    networks:
      - "traefik"
    platform: "linux/amd64"
    volumes:
      - type: "bind"
        source: "${HOST_COMFYUI_ROOT:-${COMFYUI_ROOT:-/glacier/ai/models/}}"
        target: "${CONTAINER_COMFYUI_ROOT:-/workspace/ComfyUI/models/}"
        read_only: true
        bind:
          create_host_path: true
    labels:
      # Enable Traefik for this container
      - "traefik.enable=true"
      # Use the secure entry point
      - "traefik.http.routers.comfyui.entrypoints=https"
      # Enable TLS on this router
      - "traefik.http.routers.comfyui.tls=true"
      # Define the internal container port for routing
      - "traefik.http.services.comfyui.loadbalancer.server.port=8188"
      - "traefik.http.services.comfyui.loadbalancer.server.scheme=http"
      # Specify which Docker network Traefik should use for routing
      - "traefik.docker.network=traefik"